function(create_benchmark benchmark_name benchmark_file)

    math(EXPR lastIndex "${ARGC}-1")
    foreach (index RANGE 0 ${lastIndex})
        message("arguments at index ${index}: ${ARGV${index}}")
    endforeach ()
    if (${lastIndex} GREATER 1)
        foreach (index RANGE 2 ${lastIndex})
            if (${index} EQUAL 2)
                set(ADDITIONAL_FLAGS "${ARGV${index}}")
                #                set(ADDITIONAL_FLAGS "-fopenmp")
            else ()
                set(ADDITIONAL_FLAGS "${ADDITIONAL_FLAGS};${ARGV${index}}")
            endif ()
        endforeach ()
    else ()
        set(ADDITIONAL_FLAGS "")
    endif ()

    string(REPLACE ";" " " TMP_COMPILE_OPTIONS "${BENCHMARK_COMPILE_OPTIONS}")
    set(BENCHMARK_COMPILE_FLAGS "COMPILE_OPTIONS=\"${TMP_COMPILE_OPTIONS}\"")
    string(REPLACE ";" " " TMP_COMPILE_DEFINITIONS "${BENCHMARK_COMPILE_DEFINITIONS}")
    list(APPEND BENCHMARK_COMPILE_FLAGS "COMPILE_DEFINITIONS=\"${TMP_COMPILE_DEFINITIONS}\"")
    add_executable("${benchmark_name}" "${benchmark_file}")
    target_compile_options("${benchmark_name}" PRIVATE "${GENERAL_COMPILE_OPTIONS};${GENERAL_COMPILE_WARNINGS_DEFINITIONS};${BENCHMARK_COMPILE_OPTIONS};${ADDITIONAL_FLAGS}")
    target_compile_definitions("${benchmark_name}" PRIVATE "${GENERAL_COMPILE_DEFINITIONS};${BENCHMARK_COMPILE_DEFINITIONS};${BENCHMARK_COMPILE_FLAGS}")
    target_link_libraries("${benchmark_name}" PRIVATE "${GENERAL_LINK_OPTIONS};${BENCHMARK_LINK_OPTIONS};${ADDITIONAL_FLAGS}")
    if (DEFINED CMAKE_INSTALL_PATH)
        install(TARGETS "${benchmark_name}" DESTINATION ${CMAKE_INSTALL_PATH})
    endif ()
endfunction()

add_subdirectory(benchmarks)